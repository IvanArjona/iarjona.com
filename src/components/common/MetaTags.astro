---
import { SEO } from 'astro-seo';
import { HeadHrefLangs } from 'astro-i18next/components';
import config from '~/config';
import type { MetaSEO } from '~/types';
import { getRelativeUrlByFilePath } from '~/utils/directories';
import { getCanonical } from '~/utils/permalinks';
import GoogleAnalytics from './GoogleAnalytics.astro';
import { getImage } from 'astro:assets';
import { getLanguages } from '~/utils/locale';

export interface Props extends MetaSEO {
  dontUseTitleTemplate?: boolean;
}

const defaultImage = await getImage({
  src: config.defaultImage,
  alt: config.name,
  width: 512,
  height: 512,
});

const path = Astro.url.pathname;

const {
  title = '',
  description = '',
  image: _image = defaultImage.src,
  canonical = getCanonical(String(Astro.url.pathname)),
  noindex = false,
  nofollow = false,
  ogTitle = title,
  ogType = 'website',
  dontUseTitleTemplate = false,
} = Astro.props;

const image =
  typeof _image === 'string'
    ? new URL(_image, Astro.site)
    : _image && typeof _image['src'] !== 'undefined'
    ? // @ts-ignore
      new URL(getRelativeUrlByFilePath(_image.src), Astro.site)
    : null;

const supportedLanguages = await getLanguages();

const seo = {
  title: dontUseTitleTemplate ? title : `${title} - ${config.fullName}`,
  description: description,
  canonical: String(canonical),
  noindex: noindex,
  nofollow: nofollow,
  charset: 'UTF-8',
  languageAlternates: supportedLanguages.map((language) => {
    return {
      hrefLang: language,
      href: `${config.origin}/${language}/`,
    };
  }),
  openGraph: {
    basic: {
      title: ogTitle,
      type: ogType,
      image: image,
      url: String(canonical),
    },
    image: {
      alt: description,
    },
    optional: {
      description: description,
    },
  },
  twitter: {
    title: title,
    description: description,
    card: 'summary',
    image: image,
  },
  extend: {
    link: [
      {
        rel: 'icon',
        type: 'image/x-icon',
        href: '/favicon.ico',
      },
      {
        rel: 'sitemap',
        type: 'application/xml',
        href: '/sitemap-index.xml'
      }
    ],
    meta: [
      {
        name: 'viewport',
        content: 'width=device-width, initial-scale=1.0',
      },
    ],
  },
};
---

{/* @ts-ignore */}
<SEO {...seo} />
<GoogleAnalytics />
<HeadHrefLangs />
